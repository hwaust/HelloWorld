Abstract (outline)

As XML has become a standard in computer science, processing of
queries on XML documents is a common need in XML processing. In recent
years, with the improvement of hardware, such as faster processors
with more cores, larger storage and wider network bandwidth, the XML
documents also increase dramatically ranging from several GB to hundred
of GB, which in turn bring a serial of challenges.

This thesis studies the piratical methods of parallel processing of
queries on large XML documents. An XML document contains a tree-shaped
structure and the values are represented as leavies of the tree, which
is very suitable for organizing structured information, such as a
website, a map or as a database. However, the tree structure also has
some setbacks that make it difficult to be simply processed in
parallel as array. The following are some common setbacks:

+ The parallel loading of large XML documents is complicated and low
  in efficiency
+ The existing approaches cannot efficiently process imbalanced trees
+ The existing work are impractical in terms of piratical use

The contributions of this thesis are listed as below:
+ The design of partial tree for parallel XML processing
+ An efficient BFS-array based implementation of partial tree
+ The revive of three existing partitioning strategies on top of
  modern XQuery processors
